directive @tag(name: String!) on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | SCHEMA | UNION

enum ApplyPolicy {
  AFTER_RESOLVER
  BEFORE_RESOLVER
  VALIDATION
}

type Base {
  address: String!
  id: ID!
  name: String!
}

input CreateUserInput {
  username: String!
}

type CreateUserPayload {
  user: User!
}

"""The `DateTime` scalar represents an ISO-8601 compliant date time type."""
scalar DateTime

"""
LocalDate is an immutable struct representing a date within the calendar, with no reference to a particular time zone or time of day.
"""
scalar LocalDate

"""
LocalTime is an immutable struct representing a time of day, with no reference to a particular calendar, time zone or date.
"""
scalar LocalTime

type Mutation {
  createUser(input: CreateUserInput!): CreateUserPayload!
}

"""
The node interface is implemented by entities that have a global unique identifier.
"""
interface Node {
  id: ID!
}

"""
A local date and time in a particular calendar system, combined with an offset from UTC.
"""
scalar OffsetDateTime

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """
  Indicates whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Indicates whether more edges exist prior the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

type Party {
  createdAt: DateTime!
  id: Int!
  updatedAt: DateTime
}

type Query {
  bases: [Base!]!
  me: User!

  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node

  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
  users(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
    search: String
  ): UserConnection
  versionNumber: String!
}

"""The `TimeSpan` scalar represents an ISO-8601 compliant duration type."""
scalar TimeSpan

type User implements Node {
  accessFailedCount: Int!
  concurrencyStamp: String
  createdAt: DateTime!
  createdByParty: Party
  createdByPartyId: Int
  email: String
  emailConfirmed: Boolean!
  firstName: String!
  id: ID!
  lastName: String!
  lockoutEnabled: Boolean!
  lockoutEnd: DateTime
  normalizedEmail: String
  normalizedUserName: String
  party: Party!
  partyId: Int!
  passwordHash: String
  phoneNumber: String
  phoneNumberConfirmed: Boolean!
  securityStamp: String
  twoFactorEnabled: Boolean!
  updatedAt: DateTime
  updatedByParty: Party
  updatedByPartyId: Int
  userName: String
}

"""A connection to a list of items."""
type UserConnection {
  """A list of edges."""
  edges: [UserEdge!]

  """A flattened list of the nodes."""
  nodes: [User!]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type UserEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: User!
}